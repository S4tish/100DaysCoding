package src.com.company;

import java.util.Arrays;
import java.util.Scanner;
public class Day73 {
    static int T, n;
    static String s;
    static int[] sa, height, rk;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        T = sc.nextInt();
        while (T-- > 0) {
            n = sc.nextInt();
            s = sc.next();
            sa = new int[n + 1];
            height = new int[n + 1];
            rk = new int[n + 1];
            getSA();
            int max = 0;
            for (int i = 1; i <= n; i++) {
                max = Math.max(max, height[i]);
            }
            System.out.println(max > 1 ? max : 0);
        }
    }

    static void getSA() {
        for (int i = 1; i <= n; i++) {
            sa[i] = i;
            rk[i] = s.charAt(i - 1) - 'a' + 1;
        }
        for (int w = 1; w <= n; w <<= 1) {
            Arrays.sort(sa, 1, n + 1, (int x, int y) -> {
                if (rk[x] != rk[y]) {
                    return rk[x] - rk[y];
                }
                int rx = x + w <= n ? rk[x + w] : 0;
                int ry = y + w <= n ? rk[y + w] : 0;
                return rx - ry;
            });
            int[] temp = new int[n + 1];
            for (int i = 2; i <= n; i++) {
                temp[i] = temp[i - 1] + ((rk[sa[i - 1]] != rk[sa[i]]) || (rk[sa[i] + w] != rk[sa[i - 1] + w]));
            }
            for (int i = 1; i <= n; i++) {
                rk[sa[i]] = temp[i];
            }
        }
        int k = 0;
        for (int i = 1; i <= n; i++) {
            if (k > 0) {
                k--;
            }
            int j = sa[rk[i] - 1];
            while (i + k <= n && j + k <= n && s.charAt(i + k - 1) == s.charAt(j + k - 1)) {
                k++;
            }
            height[rk[i]] = k;
        }
    }
}
